{
  "pl_pop": {
    "importer": {
      "next": "web/app/process/light/positions/buyer: pl_pop.importer.next",
      "cancel": "web/app/process/light/positions/buyer: pl_pop.importer.cancel",
      "upload": "web/app/process/light/positions/buyer: pl_pop.importer.upload",
      "close": "web/app/process/light/positions/buyer: pl_pop.importer.close",
      "positions": {
        "title": "web/app/process/light/positions/buyer: pl_pop.importer.positions.title",
        "count": "web/app/process/light/positions/buyer: pl_pop.importer.positions.count",
        "warning": "web/app/process/light/positions/buyer: pl_pop.importer.positions.warning",
        "items": {
          "Process.Light.Import.InvalidFileExtension": {
            "title": "web/app/process/light/positions/buyer: pl_pop.importer.positions.items.Process.Light.Import.InvalidFileExtension.title"
          },
          "Process.Light.Import.InvalidFile": {
            "owner": {
              "title": "web/app/process/light/positions/buyer: pl_pop.importer.positions.items.Process.Light.Import.InvalidFile.owner.title",
              "download": "web/app/process/light/positions/buyer: pl_pop.importer.positions.items.Process.Light.Import.InvalidFile.owner.download"
            },
            "participant": {
              "title": "web/app/process/light/positions/buyer: pl_pop.importer.positions.items.Process.Light.Import.InvalidFile.participant.title",
              "text": "web/app/process/light/positions/buyer: pl_pop.importer.positions.items.Process.Light.Import.InvalidFile.participant.text",
              "download": "web/app/process/light/positions/buyer: pl_pop.importer.positions.items.Process.Light.Import.InvalidFile.participant.download"
            }
          },
          "Process.Light.Import.FileHasErrors": {
            "title": "web/app/process/light/positions/buyer: pl_pop.importer.positions.items.Process.Light.Import.FileHasErrors.title",
            "download": "web/app/process/light/positions/buyer: pl_pop.importer.positions.items.Process.Light.Import.FileHasErrors.download"
          }
        }
      },
      "questionnaire": {
        "title": "web/app/process/light/positions/buyer: pl_pop.importer.questionnaire.title",
        "warning": "web/app/process/light/positions/buyer: pl_pop.importer.questionnaire.warning",
        "count": "web/app/process/light/positions/buyer: pl_pop.importer.questionnaire.count",
        "count_failure": "web/app/process/light/positions/buyer: pl_pop.importer.questionnaire.count_failure",
        "items": {
          "Process.Light.Import.InvalidFileExtension": {
            "title": "web/app/process/light/positions/buyer: pl_pop.importer.questionnaire.items.Process.Light.Import.InvalidFileExtension.title"
          },
          "Process.Light.Import.InvalidFile": {
            "title": "web/app/process/light/positions/buyer: pl_pop.importer.questionnaire.items.Process.Light.Import.InvalidFile.title"
          },
          "Process.Light.Import.FileHasErrors": {
            "title": "web/app/process/light/positions/buyer: pl_pop.importer.questionnaire.items.Process.Light.Import.FileHasErrors.title",
            "download": "web/app/process/light/positions/buyer: pl_pop.importer.questionnaire.items.Process.Light.Import.FileHasErrors.download"
          }
        }
      }
    },
    "configurator": {
      "header": "web/app/process/light/positions/buyer: pl_pop.configurator.header",
      "menu": "web/app/process/light/positions/buyer: pl_pop.configurator.menu",
      "name": "web/app/process/light/positions/buyer: pl_pop.configurator.name",
      "success": "web/app/process/light/positions/buyer: pl_pop.configurator.success",
      "actions": {
        "apply_and_close": "web/app/process/light/positions/buyer: pl_pop.configurator.actions.apply_and_close",
        "apply": "web/app/process/light/positions/buyer: pl_pop.configurator.actions.apply",
        "cancel": "web/app/process/light/positions/buyer: pl_pop.configurator.actions.cancel",
        "append": "web/app/process/light/positions/buyer: pl_pop.configurator.actions.append",
        "remove": "web/app/process/light/positions/buyer: pl_pop.configurator.actions.remove",
        "close": "web/app/process/light/positions/buyer: pl_pop.configurator.actions.close"
      },
      "details": {
        "name": "web/app/process/light/positions/buyer: pl_pop.configurator.details.name",
        "type": "web/app/process/light/positions/buyer: pl_pop.configurator.details.type"
      },
      "empty": {
        "text": "web/app/process/light/positions/buyer: pl_pop.configurator.empty.text",
        "notice": "web/app/process/light/positions/buyer: pl_pop.configurator.empty.notice"
      },
      "types": {
        "string": "web/app/process/light/positions/buyer: pl_pop.configurator.types.string",
        "double": "web/app/process/light/positions/buyer: pl_pop.configurator.types.double",
        "bool": "web/app/process/light/positions/buyer: pl_pop.configurator.types.bool",
        "datetime": "web/app/process/light/positions/buyer: pl_pop.configurator.types.datetime",
        "decimal": "web/app/process/light/positions/buyer: pl_pop.configurator.types.decimal"
      },
      "dialogs": {
        "changes": {
          "title": "web/app/process/light/positions/buyer: pl_pop.configurator.dialogs.changes.title",
          "cancel": "web/app/process/light/positions/buyer: pl_pop.configurator.dialogs.changes.cancel",
          "submit": "web/app/process/light/positions/buyer: pl_pop.configurator.dialogs.changes.submit"
        },
        "remove": {
          "title": "web/app/process/light/positions/buyer: pl_pop.configurator.dialogs.remove.title",
          "cancel": "web/app/process/light/positions/buyer: pl_pop.configurator.dialogs.remove.cancel",
          "submit": "web/app/process/light/positions/buyer: pl_pop.configurator.dialogs.remove.submit"
        }
      }
    },
    "positions": {
      "header": {
        "import_export": {
          "button": "web/app/process/light/positions/buyer: pl_pop.positions.header.import_export.button",
          "download": "web/app/process/light/positions/buyer: pl_pop.positions.header.import_export.download",
          "import": "web/app/process/light/positions/buyer: pl_pop.positions.header.import_export.import"
        }
      },
      "empty": {
        "text": "web/app/process/light/positions/buyer: pl_pop.positions.empty.text"
      },
      "table": {
        "actions": {
          "documents": {
            "title": "web/app/process/light/positions/buyer: pl_pop.positions.table.actions.documents.title",
            "text": "web/app/process/light/positions/buyer: pl_pop.positions.table.actions.documents.text"
          }
        }
      },
      "defaults": {
        "name": "web/app/process/light/positions/buyer: pl_pop.positions.defaults.name",
        "unit": "web/app/process/light/positions/buyer: pl_pop.positions.defaults.unit"
      },
      "actions": {
        "append": "web/app/process/light/positions/buyer: pl_pop.positions.actions.append"
      },
      "delete": {
        "text": "web/app/process/light/positions/buyer: pl_pop.positions.delete.text",
        "cancel": "web/app/process/light/positions/buyer: pl_pop.positions.delete.cancel",
        "confirm": "web/app/process/light/positions/buyer: pl_pop.positions.delete.confirm",
        "success": "web/app/process/light/positions/buyer: pl_pop.positions.delete.success"
      }
    }
  }
}